.TH "LIPSUM" "1" "September 2014" "lipsum 0.1.15" "User Commands"
.SH "NAME"
lipsum -- Canonical example for the command module.
.SH "USAGE"

.SP
lipsum <command> [\-ljcveh] [\-\-color|\-\-no\-color] [\-\-debug]
.br
       [\-l|\-\-latin] [\-j|\-\-json] [\-c|\-\-collapse] [\-v|\-\-vanilla]
.br
       [\-e|\-\-exit] [\-h|\-\-help] [\-\-version] [\-\-log\-level=<level>]
.br
       [\-\-log\-file=<file>] [\-s|\-\-sort=(null|true|false|1|\-1)]
.br
       [\-f|\-\-format=(text|json|markdown|man)]
.br
       [\-a|\-\-align=(column|line|flex|wrap)] [\-m|\-\-maximum=<60\-240>]
.br
       <args>
.SH "DESCRIPTION"
.PP
Generates lorem ipsum text and is used to test help output for the command module.
.PP
If the \fB\-l | \-\-latin\fR option is specified and it looks like latin then it does nothing, other more meaningful options that have an affect are interspersed, try \fB\-\-align\fR and \fB\-\-format\fR in particular. The examples are valid, they illustrate some of the functionality of the command module.
.PP
When invoked without arguments the program will print some lorem ipsum paragraphs.
.SH "COMMANDS"
.BL
.IP "\[ci]" 4
\fBhelp\fR: Show help for commands.
.IP "\[ci]" 4
\fBprint, p\fR: Print some messages using the log middleware.
.IP "\[ci]" 4
\fBexception, ex, e\fR: Throw an exception.
.EL
.SH "OPTIONS"
.BL
.IP "\[ci]" 4
\fB\-v, \-\-vanilla\fR: Disable parameter replacement.
.IP "\[ci]" 4
\fB\-\-[no]\-color\fR: Enable or disable terminal colors.
.IP "\[ci]" 4
\fB\-\-log\-file=[file]\fR: Redirect to log file.
.IP "\[ci]" 4
\fB\-\-debug\fR: Enable stack traces.
.IP "\[ci]" 4
\fB\-l, \-\-latin\fR: Include mock lipsum options and commands.
.IP "\[ci]" 4
\fB\-j, \-\-json\fR: Print help as json.
.IP "\[ci]" 4
\fB\-c, \-\-collapse\fR: Collapse whitespace between sections.
.IP "\[ci]" 4
\fB\-\-log\-level=[level]\fR: Set the log level.
.IP "\[ci]" 4
\fB\-e, \-\-exit\fR: Include exit section from error definitions.
.IP "\[ci]" 4
\fB\-s, \-\-sort=[value]\fR: Alters the help option sort order. Set to null to use natural order which is likely the order that options were declared in however this is not guaranteed. Use false for the default sorting logic which favours options with more names, use true to sort lexicographically using \fIArray.prototype.sort\fR. Use 1 to sort by option string length (determined by the length of the help option string), reverse the order with \-1.
.IP "\[ci]" 4
\fB\-f, \-\-format=[value]\fR: Set the help output format.
.IP "\[ci]" 4
\fB\-a, \-\-align=[value]\fR: Alignment style.
.IP "\[ci]" 4
\fB\-m, \-\-maximum=[value]\fR: Maximum column width.
.IP "\[ci]" 4
\fB\-h, \-\-help\fR: Display this help and exit.
.IP "\[ci]" 4
\fB\-\-version\fR: Output version information and exit.
.EL
.SH "BUGS"
.PP
Report bugs to muji noop@xpm.io.
